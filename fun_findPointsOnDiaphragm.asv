function [xm, ym, xL, yL, xR, yR] = fun_findPointsOnDiaphragm(C, NP)

% point x - mean over all contour x
xx = C(:, 2);
yy = C(:, 1);

% centroid
xm = mean(xx);
ym = mean(yy);

%% lower half
ind = find(yy>ym);
yyn = yy(ind);
xxn = xx(ind);

% mid. vert. line
x1 = [xm xm];
y1 = [ym+1 1e5];

% cross
[xi, yi] = polyxpoly(x1, y1, xxn, yyn);


[~, idx] = min(abs(xxn-xi));
xm = round(xxn(idx)); % x
x1 = [xm xm];
[xm, ym] = polyxpoly(x1, y1, xxn, yyn);


[~, ind] = sort(abs(xx - xm));
px4 = xx(ind(1:4));
py4 = yy(ind(1:4));

[~, idx] = max(py4);
idxm = ind(idx); % point index

xm = round(xx(idxm));


% neightbours
xL = xm-(1:NP);
xR = xm+(1:NP);

for n = 1:NP
end


function [y] = fun_findY(xx, yy, xi)
    x1 = xx(xi-1);
    x2 = xx(xi+1);
    y1 = yy(-1);
    y2 = yy(idxm+1);

    s = (y2-y1)/(x2-x1);
    ym = y1+(xm-x1)*s;
