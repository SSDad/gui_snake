function [] = fh_kpfcn(H, E)          

data_main = guidata(H);

ixm = data_main.Point.ixm;
xi = data_main.Point.xi;
yi = data_main.Point.yi;
NP = data_main.Point.NP;

switch E.Key
    case 'rightarrow'
        ixm = ixm+1;
    case 'leftarrow'
        ixm = ixm-1;
%     case 'return'
%         data_main.hPlotObj.Point.Color = 'r';
%         set(H, 'keypressfcn', '');
    otherwise  
end

xx = (1:data_main.nImages)';
yy = mean(yi(:, ixm-NP:ixm+NP), 2);

% on image
data_main.hPlotObj.LeftPoints.XData = xi(ixm-NP:ixm-1);
data_main.hPlotObj.LeftPoints.YData = yi(iSlice, ixm-NP:ixm-1);
data_main.hPlotObj.RightPoints.XData = xi(ixm+1:ixm+NP);
data_main.hPlotObj.RightPoints.YData = yi(iSlice, ixm+1:ixm+NP);

% point plot
hPlotObj.PlotPoint.All.XData = xx;
hPlotObj.PlotPoint.All.YData = yy;


% update
x1 = [xm xm];
y1 = [yMean+10 1e4];

[xm, ym] = polyxpoly(x1, y1, xxn, yyn);

xL = xm-(1:NP)*dx;
xR = xm+(1:NP)*dx;
for n = 1:NP
    x1 = [xL(n) xL(n)];
    [~, yL(n)] = polyxpoly(x1, y1, xxn, yyn);

    x1 = [xR(n) xR(n)];
    [~, yR(n)] = polyxpoly(x1, y1, xxn, yyn);
end

% show on gui
data_main.hPlotObj.Point.XData = xm;
data_main.hPlotObj.Point.YData = ym;
data_main.hPlotObj.LeftPoints.XData = xL;
data_main.hPlotObj.LeftPoints.YData = yL;
data_main.hPlotObj.RightPoints.XData = xR;
data_main.hPlotObj.RightPoints.YData = yR;

guidata(H, data_main);
