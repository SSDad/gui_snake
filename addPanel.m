function [hPanel, hAxis, hPlotObj, hSlider, hText, hToggleButton, hPushButton, hPopup, hEdit] = addPanel(hFig)

%% snake
hPanel.snake = uipanel('Parent',                    hFig,...    
                             'Title',                        '',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'Position',                  [0, 0, .6, 1.],...
                                    'visible',                      'on', ...
                                'ForegroundColor',       'white',...
                                'BackgroundColor',       'black', ...
                                'HighlightColor',          'c',...
                                'ShadowColor',            'black');

% contrast
hPanel.Contrast = uipanel('parent', hPanel.snake,...
                                'Unit', 'Normalized',...
                                'Position', [.25, .9, .5, .05], ...
                                'Title', '',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'visible',                      'on', ...
                                'ForegroundColor',       'k',...
                                'BackgroundColor',       'k', ...
                                'HighlightColor',          'k',...
                                'ShadowColor',            'k');
                            
[hAxis.Contrast, hPlotObj.Contrast.Hist, hPlotObj.Contrast.Rect] = ...
    addContrastBar(hPanel.Contrast);
    
                            
hSlider.snake = uicontrol('Parent',  hPanel.snake,...
            'Style','slider',...
            'units', 'normalized',...
            'Position',[.2 0.05 0.6 0.03],...
            'BackgroundColor', 'b',...
            'ForegroundColor', 'w',...
            'Visible', 'off', ...
                'Callback', @hSlider_snake_Callback);
            
hText.nImages = uicontrol('Parent', hPanel.snake, ...
                                'Style', 'text', ...
                                'Units',                     'normalized', ...
                                'Position', [0.01 0.05 0.15, 0.03], ...
                                'FontSize', 16, ...
                                'FontWeight', 'bold', ...
                                'BackgroundColor', 'b',...
                                'ForegroundColor', 'w',...
                                'Visible', 'off', ...
                                'String', 'iSlice / nSlices');
                            
hToggleButton.Manual = uicontrol('Parent', hPanel.snake, ...
                                'Style', 'togglebutton', ...
                                'Units',                     'normalized', ...
                                'Position', [0.0 0.95 0.2, 0.03], ...
                                'FontSize', 16, ...
                                'FontWeight', 'bold', ...
                                'BackgroundColor', [1 1 1]*0.2,...
                                'ForegroundColor', 'g',...
                                'String', 'ReContour', ...
                                'Visible', 'off',...
                                'Callback', @hToggleButton_Manual_Callback);

hPushButton.DeleteSnake = uicontrol('Parent', hPanel.snake, ...
                                'Style', 'pushbutton', ...
                                'Units',                     'normalized', ...
                                'Position', [0.0 0.9 0.2, 0.03], ...
                                'FontSize', 16, ...
                                'FontWeight', 'bold', ...
                                'BackgroundColor', [1 1 1]*0.2,...
                                'ForegroundColor', 'g',...
                                'String', 'Delete Contour', ...
                                'Visible', 'off',...
                                'Callback', @hPushButton_DeleteSnake_Callback);

hText.Neighbour = uicontrol('Parent', hPanel.snake, ...
                                'Style', 'text', ...
                                'Units',                     'normalized', ...
                                'Position', [0. 0.85 0.2, 0.025], ...
                                'FontSize', 12, ...
                                'Visible', 'off',...
                                'String', 'Neighbour Points');

hPopup.Neighbour = uicontrol('Parent', hPanel.snake, ...
                                'Style', 'popupmenu', ...
                                'Units',                     'normalized', ...
                                'Position', [0. 0.8 0.05, 0.05], ...
                                'FontSize', 12, ...
                                'BackgroundColor', [1 1 1]*0.2,...
                                'ForegroundColor', 'c',...
                                'Visible', 'off',...
                                'String', {'0', '1', '2', '3', '4', '5', '6'});

% image info
hPanel.ImageInfo = uipanel('parent', hPanel.snake,...
                                'Unit', 'Normalized',...
                                'Position', [.8, .85, .2, .15], ...
                                'Title', 'Image Info',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'visible',                      'on', ...
                                'ForegroundColor',       'white',...
                                'BackgroundColor',       'black', ...
                                'HighlightColor',          'k',...
                                'ShadowColor',            'k');

nR = 3;
txt.FirstRow = {'Name', 'Value'};
txt.FirstColumn = {'FoV'; 'Image Size'; 'Pixel Size'};
columnRatio = [1]; % width ratio to first column
txt.DataStr = {'350'; ''; ''};

[hEdit.ImageInfo] = fun_myTable(hPanel.ImageInfo, nR, columnRatio, txt);

% slither param panel
hPanel.Slither = uipanel('parent', hPanel.snake,...
                                'Unit', 'Normalized',...
                                'Position', [.0, .1, .15, .075], ...
                                'Title', 'Slithering',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'visible',                      'on', ...
                                'ForegroundColor',       'white',...
                                'BackgroundColor',       'black', ...
                                'HighlightColor',          'k',...
                                'ShadowColor',            'k');

[hPushButton.Slither] = addPanel_Slither(hPanel.Slither);

% sgolay param panel
hPanel.SGolayParam = uipanel('parent', hPanel.snake,...
                                'Unit', 'Normalized',...
                                'Position', [.0, .7, .2, .1], ...
                                'Title', 'Smoothing',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'visible',                      'off', ...
                                'ForegroundColor',       'white',...
                                'BackgroundColor',       'black', ...
                                'HighlightColor',          'k',...
                                'ShadowColor',            'k');

[hPopup.SGolayParam] = addPanel_SGolay(hPanel.SGolayParam);

% snake param panel
hPanel.SnakeParam = uipanel('parent', hPanel.snake,...
                                'Unit', 'Normalized',...
                                'Position', [.0, .5, .2, .2], ...
                                'Title', 'Snake',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'visible',                      'off', ...
                                'ForegroundColor',       'white',...
                                'BackgroundColor',       'black', ...
                                'HighlightColor',          'k',...
                                'ShadowColor',            'k');

txt.FirstColumn = {'Iteration'
                           'Contraction bias'
                           'Smooth factor'};
txt.DataStr{1} = {'5', '10', '15', '20'};
txt.DataStr{2} = {'-0.4', '-0.3', '-0.2', '-0.1', '0', '0.1', '0.2', '0.3', '0.4'};
txt.DataStr{3} = {'0', '0.5', '1', '1.5', '2'};
cellWidthRatio = [2 1];
[hPopup.SnakeParam] = fun_myTablePopup(hPanel.SnakeParam, txt, cellWidthRatio);


%% point plot                            
hPanel.PlotPoint = uipanel('Parent',                    hFig,...    
                             'Title',                        '',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'Position',                  [0.6, 0.7, 0.4, 0.3],...
                                    'visible',                      'on', ...
                                'ForegroundColor',       'white',...
                                'BackgroundColor',       'black', ...
                                'HighlightColor',          'c',...
                                'ShadowColor',            'black');
                            
    hAxis.PlotPoint = axes('Parent',                   hPanel.PlotPoint, ...
                                'color',        'none',...
                                'xcolor', 'w',...
                                'ycolor', 'w', ...
                                'gridcolor',   'w',...
                                'Units',                    'normalized', ...
                                'HandleVisibility',     'callback', ...
                                'Position',                 [0.05 0.025 0.9 0.9]);

    hAxis.PlotPoint.XAxisLocation='top';
    hold(hAxis.PlotPoint, 'on')
    
    hPlotObj.PlotPoint.All = line(hAxis.PlotPoint, 'XData', [], 'YData', [],  'Marker', '.',  'MarkerSize', 12, 'Color', 'c', 'LineStyle', '-');
    hPlotObj.PlotPoint.Current = line(hAxis.PlotPoint, 'XData', [], 'YData', [],  'Marker', '.',  'MarkerSize', 16, 'Color', 'r', 'LineStyle', 'none');
    
%% tumor                           
hPanel.Tumor = uipanel('Parent',                    hFig,...    
                             'Title',                        '',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'Position',                  [0.6, 0.3, .4, 0.4],...
                                    'visible',                      'on', ...
                                'ForegroundColor',       'white',...
                                'BackgroundColor',       'black', ...
                                'HighlightColor',          'c',...
                                'ShadowColor',            'black');
                            
%% profile plot                            
hPanel.Profile = uipanel('Parent',                    hFig,...    
                             'Title',                        '',...
                                'FontSize',                 12,...
                                'Units',                     'normalized', ...
                                'Position',                  [0.6, 0., 0.4, 0.3],...
                                    'visible',                      'on', ...
                                'ForegroundColor',       'white',...
                                'BackgroundColor',       'black', ...
                                'HighlightColor',          'c',...
                                'ShadowColor',            'black');
                            
hAxis.Profile = axes('Parent',                   hPanel.Profile, ...
                                'color',        'none',...
                                'xcolor', 'w',...
                                'ycolor', 'w', ...
                                'gridcolor',   'w',...
                                'Units',                    'normalized', ...
                                'HandleVisibility',     'callback', ...
                                'Position',                 [0.1 0.1 0.85 0.85]);

                                
hold(hAxis.Profile, 'on')

% profile
hPlotObj.Profile.Profile = line(hAxis.Profile, 'XData', [], 'YData', [],...
    'Marker', '.',  'MarkerSize', 12,...
    'Color', 'c', 'LineStyle', '-');

% patch
hPlotObj.Profile.Patch1 = patch(hAxis.Profile, 'XData', [], 'YData', [],...
    'FaceColor', 'g', 'FaceAlpha', 0.2, 'EdgeColor', 'none');
hPlotObj.Profile.Patch2 = patch(hAxis.Profile, 'XData', [], 'YData', [],...
    'FaceColor', 'g', 'FaceAlpha', 0.2, 'EdgeColor', 'none');

hPlotObj.Profile.Text1 = text(hAxis.Profile,  0, 0, '', 'Color', 'w', 'FontSize', 12);
hPlotObj.Profile.Text2 = text(hAxis.Profile,  0, 0, '', 'Color', 'w', 'FontSize', 12);

% ref contour
hPlotObj.Profile.RefLeft = line(hAxis.Profile, 'XData', [], 'YData', [],...
     'Color', 'r', 'LineStyle', '-');
hPlotObj.Profile.RefRight = line(hAxis.Profile, 'XData', [], 'YData', [],...
     'Color', 'r', 'LineStyle', '-');

hPlotObj.Profile.RefTextLeft1 = text(hAxis.Profile,  0, 0, '', 'Color', 'w', 'FontSize', 12);
hPlotObj.Profile.RefTextLeft2 = text(hAxis.Profile,  0, 0, '', 'Color', 'w', 'FontSize', 12);
hPlotObj.Profile.RefTextRight1 = text(hAxis.Profile,  0, 0, '', 'Color', 'w', 'FontSize', 12);
hPlotObj.Profile.RefTextRight2 = text(hAxis.Profile,  0, 0, '', 'Color', 'w', 'FontSize', 12);